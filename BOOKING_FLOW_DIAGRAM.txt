╔══════════════════════════════════════════════════════════════════════════════╗
║                    🎯 BOOKING SYSTEM COMPLETE FLOW                            ║
║                        Step-by-Step Visual Guide                              ║
╚══════════════════════════════════════════════════════════════════════════════╝


╔════════════════════════════════════════════════════════════════════════════╗
║ 🔓 PHASE 1: LOGIN & ACCESS                                                ║
╚════════════════════════════════════════════════════════════════════════════╝

    ┌─────────────────────────────────────┐
    │  http://localhost:3000              │
    │  Username: admin                    │
    │  Password: password123              │
    └──────────────┬──────────────────────┘
                   │
                   ▼
    ┌─────────────────────────────────────┐
    │  ✅ LOGIN SUCCESSFUL                │
    │  Homepage loads with Sidebar        │
    └──────────────┬──────────────────────┘
                   │
                   ▼
    ┌─────────────────────────────────────┐
    │  📌 SIDEBAR MENU                    │
    │  ├─ Dashboard                       │
    │  ├─ Rate Master                     │
    │  ├─ Booking      ◄── CLICK HERE     │
    │  ├─ Invoice                         │
    │  ├─ Payment                         │
    │  └─ Reports                         │
    └──────────────┬──────────────────────┘
                   │
                   ▼
    ┌─────────────────────────────────────┐
    │  🎁 BOOKING SUBMENU (DROPDOWN)      │
    │  ├─ Add                             │
    │  ├─ Modify                          │
    │  ├─ Update Rate                     │
    │  ├─ Check Booking List              │
    │  ├─ No Booking Data                 │
    │  ├─ Multiple Booking                │
    │  ├─ Import CashCounter              │
    │  ├─ Import Limitless                │
    │  └─ Import Excel                    │
    └─────────────────────────────────────┘


╔════════════════════════════════════════════════════════════════════════════╗
║ ✏️ PHASE 2: CREATE BOOKING (ADD NEW)                                      ║
╚════════════════════════════════════════════════════════════════════════════╝

    /booking/add
    │
    ├─ FORM LAYOUT:
    │  ┌────────────────────────────────────────────────┐
    │  │ ROW 1 (Identifiers & Dates)                    │
    │  │ ┌─────────┬──────────┬──────────┬──────────┐   │
    │  │ │Consi No │Cust ID  │Receiver  │Address   │   │
    │  │ │(*)      │(*)      │          │          │   │
    │  │ └─────────┴──────────┴──────────┴──────────┘   │
    │  │                                                │
    │  │ ┌─────────┬──────────┬──────────┬──────────┐   │
    │  │ │Book Date│Cons Type│Pincode  │Mode      │   │
    │  │ │(*)      │          │(*)      │          │   │
    │  │ └─────────┴──────────┴──────────┴──────────┘   │
    │  │                                                │
    │  │ ┌─────────┬──────────┬──────────┬──────────┐   │
    │  │ │Act Wt   │Char Wt  │Qty      │Type      │   │
    │  │ │         │(*)      │(*)      │          │   │
    │  │ └─────────┴──────────┴──────────┴──────────┘   │
    │  │                                                │
    │  │ ROW 2 (Financial)                             │
    │  │ ┌─────────┬──────────┬──────────┬──────────┐   │
    │  │ │Amount   │Oth Chrg  │Reference │Dtdc Amt │   │
    │  │ │         │          │          │         │   │
    │  │ └─────────┴──────────┴──────────┴──────────┘   │
    │  └────────────────────────────────────────────────┘
    │
    ├─ FILL REQUIRED FIELDS (marked with *)
    │  ├─ Consignment No: ABC001
    │  ├─ Customer ID: CUST001
    │  ├─ Booking Date: 2024-01-15
    │  ├─ Pincode: 400001
    │  ├─ Char Wt: 3.0
    │  └─ Qty: 1
    │
    ├─ CLICK "SAVE" BUTTON
    │  │
    │  ▼
    │  Frontend sends POST request:
    │  POST /api/bookings
    │  Body: {all form fields}
    │  │
    │  ▼
    │  Backend processes:
    │  ✓ Validates required fields
    │  ✓ Checks unique consignment_no
    │  ✓ Inserts to database
    │  ✓ Creates tracking entry
    │  │
    │  ▼
    │  ✅ Response: { success: true, data: {...} }
    │
    └─ CONFIRMATION
       ├─ Toast message: "Booking created successfully!"
       ├─ Booking saved to MySQL database
       ├─ Status: "Booked"
       ├─ Auto tracking created
       └─ Ready for invoicing


╔════════════════════════════════════════════════════════════════════════════╗
║ 🔍 PHASE 3: SEARCH & VIEW BOOKINGS                                        ║
╚════════════════════════════════════════════════════════════════════════════╝

    OPTION A: Check Booking List (/booking/check-list)
    ┌──────────────────────────────────────────────────┐
    │ FILTER SECTION                                   │
    │ ┌────────────────┐ ┌────────────────────────┐    │
    │ │Customer ID     │ │From Date   │ To Date   │    │
    │ │CUST001         │ │2024-01-01  │ 2024-01-31    │
    │ └────────────────┘ └────────────────────────┘    │
    │                                                  │
    │ ┌──────────────┐  ┌──────────────┐              │
    │ │ SHOW BUTTON  │  │ EXPORT EXCEL │              │
    │ └──────────────┘  └──────────────┘              │
    │                                                  │
    │ CLICK "SHOW":                                    │
    │ API Call: GET /api/bookings/filter               │
    │          ?customer_id=CUST001                    │
    │          &from_date=2024-01-01                   │
    │          &to_date=2024-01-31                     │
    │                                                  │
    │ Returns: All matching bookings                   │
    │                                                  │
    │ DATA TABLE (18 columns)                          │
    │ ┌─────────────────────────────────────────────┐  │
    │ │#  │Action│Cust ID │Cons #│Weight│Qty│Dest │  │
    │ ├──────────────────────────────────────────────┤  │
    │ │ 1 │View  │CUST001 │ABC001│ 3.0 │ 1 │Mumbai   │
    │ │ 2 │View  │CUST001 │ABC002│ 2.5 │ 1 │Delhi    │
    │ │ 3 │View  │CUST001 │ABC003│ 5.0 │ 2 │Chennai  │
    │ └─────────────────────────────────────────────┘  │
    │                                                  │
    │ Other columns: Pincode, Address, Type, Mode,    │
    │ Amount, Booking Date, Insurance, Bill Amount,   │
    │ Percentage, Risk Surcharge, Other Charges       │
    └──────────────────────────────────────────────────┘

    OPTION B: Modify Bookings (/booking/modify)
    ┌──────────────────────────────────────────────────┐
    │ FILTER + SHOW (same as above)                    │
    │                                                  │
    │ CLICK "EDIT" ON ANY ROW:                         │
    │ ┌────────────────────────────────────────────┐   │
    │ │ EDIT MODAL                                 │   │
    │ │ ┌──────────────────────────────────────┐   │   │
    │ │ │Consignment No: ABC001 (disabled)     │   │   │
    │ │ │Customer ID: CUST001 (disabled)       │   │   │
    │ │ │Amount: 500 ────► 550 (EDITABLE)     │   │   │
    │ │ │Insurance: 0 ────► 100 (EDITABLE)    │   │   │
    │ │ │Other Charges: 50 (EDITABLE)         │   │   │
    │ │ │Total: 550 ────► 650 (AUTO-CALC)    │   │   │
    │ │                                        │   │   │
    │ │ ┌─────────────┐ ┌──────────┐          │   │   │
    │ │ │ UPDATE SAVE │ │ CLOSE    │          │   │   │
    │ │ └─────────────┘ └──────────┘          │   │   │
    │ └────────────────────────────────────────┘   │   │
    │                                              │   │
    │ API: PUT /api/bookings/1                      │   │
    │      { amount: 550, insurance: 100 }          │   │
    │ Response: ✅ Booking updated                  │   │
    └──────────────────────────────────────────────────┘

    OPTION C: Update Rates (/booking/update-rate)
    ┌──────────────────────────────────────────────────┐
    │ FILTER + SHOW (mandatory date range)             │
    │                                                  │
    │ DATA TABLE (editable)                            │
    │ ┌──────────────────────────────────────────┐     │
    │ │Cons # │Amount      │Insurance │Total    │     │
    │ ├──────────────────────────────────────────┤     │
    │ │ABC001 │ 500 ────► │  0 ────► │ 550    │     │
    │ │       │ 600 typed  │ 100 typed │ 700    │     │
    │ │ABC002 │ 400 ────► │  0 ────► │ 450    │     │
    │ │       │ 450 typed  │  50 typed │ 500    │     │
    │ └──────────────────────────────────────────┘     │
    │                                                  │
    │ CLICK "UPDATERATE":                              │
    │ API: POST /api/bookings/update-rate              │
    │      { bookings: [{id: 1, amount: 600}, ...] }   │
    │ Response: ✅ All rates updated                   │
    └──────────────────────────────────────────────────┘

    OPTION D: Find Unbilled (/booking/no-booking-data)
    ┌──────────────────────────────────────────────────┐
    │ PURPOSE: Find bookings WITHOUT invoices           │
    │                                                  │
    │ From Date: 2024-01-01 (required)                 │
    │ To Date:   2024-01-31 (required)                 │
    │ Filter:    [Dropdown options]                    │
    │                                                  │
    │ CLICK "SHOW":                                    │
    │ API: GET /api/bookings/no-booking-list           │
    │      ?from_date=...&to_date=...                  │
    │                                                  │
    │ SIMPLIFIED TABLE (7 columns)                     │
    │ ┌──────────────────────────────────────┐         │
    │ │# │Cons # │Weight │Pincode│Mode│Amount│         │
    │ ├──────────────────────────────────────┤         │
    │ │1 │ABC001 │  3.0  │400001 │ AR │ 500  │         │
    │ │2 │ABC002 │  2.5  │400002 │ AR │ 450  │         │
    │ └──────────────────────────────────────┘         │
    │                                                  │
    │ EXPORT TO EXCEL (optional)                       │
    └──────────────────────────────────────────────────┘


╔════════════════════════════════════════════════════════════════════════════╗
║ 📥 PHASE 4: BULK OPERATIONS                                               ║
╚════════════════════════════════════════════════════════════════════════════╝

    OPTION A: Multiple Booking (/booking/multiple)
    ┌──────────────────────────────────────────────────┐
    │ CREATE UP TO 100 BOOKINGS AT ONCE                │
    │                                                  │
    │ Start Number:  ┌──────┐  1                       │
    │ End Number:    ┌──────┐  100                     │
    │ Company Name:  ┌──────────────┐  ABC             │
    │                                                  │
    │ Result: Creates ABC001, ABC002, ..., ABC100      │
    │                                                  │
    │ Upload DTDC File: [optional]                     │
    │                                                  │
    │ CLICK "SUBMIT":                                  │
    │ API: POST /api/bookings/multiple                 │
    │      { start_no: 1, end_no: 100, company: "ABC"} │
    │ Response: ✅ 100 bookings created                │
    └──────────────────────────────────────────────────┘

    OPTION B: Import Excel (/booking/import-excel)
    ┌──────────────────────────────────────────────────┐
    │ THREE FORMAT OPTIONS                             │
    │                                                  │
    │ FORMAT 1: Simple (Minimal)                       │
    │ ┌─────────────────────────────────────────────┐  │
    │ │ Consignment No* │ Customer ID*              │  │
    │ │ ABC001          │ CUST001                   │  │
    │ │ ABC002          │ CUST002                   │  │
    │ └─────────────────────────────────────────────┘  │
    │ [Download Template] [Upload File]                │
    │                                                  │
    │ FORMAT 2: Extended (With Charges)                │
    │ ┌──────────────────────────────────────────┐     │
    │ │Sr.No │Cons No* │Cust ID* │Char Wt │Ins │     │
    │ │1     │ABC001   │CUST001  │  3.0   │100 │     │
    │ │2     │ABC002   │CUST002  │  2.5   │ 80 │     │
    │ └──────────────────────────────────────────┘     │
    │ [Download Template] [Upload File]                │
    │                                                  │
    │ FORMAT 3: Complete (Full Data)                   │
    │ ┌──────────────────────────────────────────┐     │
    │ │Sr │Cons │Wt │Mode │Qty │Pincode │Type │     │
    │ │1  │ABC01│3.0│ AR  │ 1  │400001  │ D   │     │
    │ │2  │ABC02│2.5│ AR  │ 1  │400002  │ D   │     │
    │ └──────────────────────────────────────────┘     │
    │ [Download Template] [Upload File]                │
    │                                                  │
    │ CLICK "UPLOAD":                                  │
    │ API: POST /api/bookings/import-excel             │
    │      FormData: { file: <Excel>, format: 1 }      │
    │ Response: ✅ 50 bookings imported                │
    └──────────────────────────────────────────────────┘

    OPTION C: Import CashCounter (/booking/import-cashcounter)
    ┌──────────────────────────────────────────────────┐
    │ IMPORT FROM EXTERNAL SYSTEM                      │
    │                                                  │
    │ From Date:     ┌────────────┐  2024-01-01       │
    │ To Date:       ┌────────────┐  2024-01-31       │
    │ Customer ID:   ┌────────────┐  Cash_1           │
    │                                                  │
    │ CLICK "BOOK":                                    │
    │ API: POST /api/bookings/import-cashcounter       │
    │      { from_date: "...", to_date: "...", ... }  │
    │ Response: ✅ All matching transactions imported  │
    └──────────────────────────────────────────────────┘

    OPTION D: Import Limitless (/booking/import-limitless)
    ┌──────────────────────────────────────────────────┐
    │ UPLOAD TEXT + EXCEL FILES                        │
    │                                                  │
    │ ┌────────────────────┐  ┌────────────────────┐   │
    │ │ Upload Text File   │  │ Upload Excel File  │   │
    │ │                    │  │                    │   │
    │ │ [Drop zone]        │  │ [Drop zone]        │   │
    │ │ ┌────────────────┐ │  │ ┌────────────────┐ │   │
    │ │ │ Select File    │ │  │ │ Select File    │ │   │
    │ │ └────────────────┘ │  │ └────────────────┘ │   │
    │ │ [Upload Button]    │  │ [Upload Button]    │   │
    │ └────────────────────┘  └────────────────────┘   │
    │                                                  │
    │ API: POST /api/bookings/import-text (for TXT)    │
    │      POST /api/bookings/import-excel-limitless   │
    │ Response: ✅ Files processed                     │
    └──────────────────────────────────────────────────┘


╔════════════════════════════════════════════════════════════════════════════╗
║ 💾 PHASE 5: DATABASE OPERATIONS                                           ║
╚════════════════════════════════════════════════════════════════════════════╝

    Backend Flow:
    
    API Request → Express.js Router → Controller → Database
    
    Example: POST /api/bookings
    │
    ├─ Express Router (bookingRoutes.js)
    │  └─ authenticate middleware
    │  └─ route.post("/", createBooking)
    │
    ├─ Controller Function (bookingController.js)
    │  ├─ Validate required fields
    │  ├─ Get database connection: getDb()
    │  ├─ Check unique consignment_number
    │  └─ INSERT into bookings table
    │
    ├─ MySQL Database
    │  ├─ Table: bookings
    │  └─ Row inserted:
    │     {
    │       id: 1,
    │       franchise_id: 1,
    │       consignment_number: "ABC001",
    │       customer_id: "CUST001",
    │       amount: 500,
    │       total: 550,
    │       status: "Booked",
    │       created_at: 2024-01-15 10:30:00,
    │       updated_at: 2024-01-15 10:30:00
    │     }
    │
    ├─ Tracking Entry Created (automatic)
    │  └─ tracking table:
    │     {
    │       booking_id: 1,
    │       status: "Booked",
    │       location: "Origin",
    │       remarks: "Consignment booked successfully"
    │     }
    │
    └─ Response to Frontend
       └─ { success: true, data: {id: 1, ...} }


    Example: GET /api/bookings/filter?customer_id=CUST001
    │
    ├─ Express Router
    │  └─ authenticate middleware ✓
    │  └─ route.get("/filter", filterBookings) ✓ (Fixed!)
    │
    ├─ Controller: filterBookings()
    │  ├─ Get franchise_id from JWT token
    │  ├─ Build SQL query:
    │  │  SELECT * FROM bookings
    │  │  WHERE franchise_id = 1
    │  │    AND customer_id = "CUST001"
    │  │    AND booking_date BETWEEN "2024-01-01" AND "2024-01-31"
    │  │  ORDER BY booking_date DESC
    │  │
    │  └─ Execute query on MySQL
    │
    ├─ Database Results
    │  └─ Returns array of matching bookings
    │
    └─ Response to Frontend
       └─ { success: true, data: [{id: 1, ...}, {id: 2, ...}] }


╔════════════════════════════════════════════════════════════════════════════╗
║ 📊 BOOKING SCHEMA REFERENCE                                               ║
╚════════════════════════════════════════════════════════════════════════════╝

    bookings table structure:
    
    PRIMARY: id (Auto-increment)
    └─ franchise_id (Foreign Key)
       
    IDENTIFICATION:
    ├─ consignment_number (Unique per franchise)
    ├─ customer_id
    └─ booking_date
       
    RECEIVER INFO:
    ├─ receiver (name)
    ├─ address
    └─ pincode
       
    SHIPMENT:
    ├─ consignment_type (Domestic/International)
    ├─ mode (AR/Other)
    ├─ act_wt (actual weight)
    ├─ char_wt (chargeable weight) ← USED FOR RATES
    └─ qty (quantity)
       
    FINANCIAL:
    ├─ type (D/other)
    ├─ amount (base rate)
    ├─ other_charges
    ├─ insurance
    ├─ percentage
    ├─ risk_surcharge
    ├─ dtdc_amt
    ├─ bill_amount
    └─ total = amount + other_charges + insurance + risk_surcharge
       
    STATUS & TRACKING:
    ├─ status (Booked/Invoiced/Delivered)
    ├─ destination (city)
    ├─ remarks (notes)
    ├─ reference (external ref)
    ├─ created_at
    └─ updated_at


╔════════════════════════════════════════════════════════════════════════════╗
║ ✅ KEY FIXES APPLIED                                                      ║
╚════════════════════════════════════════════════════════════════════════════╝

    FIX #1: Database Schema (Migration #20)
    ├─ Removed: receiver_pincode column ❌
    ├─ Kept: pincode column ✅
    └─ Result: No more schema validation errors
    
    FIX #2: Route Ordering (bookingRoutes.js)
    ├─ Before: /api/bookings/:id ← matched /filter (WRONG)
    ├─ After:  /api/bookings/filter ← specific routes first ✅
    └─ Result: Filter endpoints now accessible


╔════════════════════════════════════════════════════════════════════════════╗
║ 🎯 QUICK ACTION MAP                                                       ║
╚════════════════════════════════════════════════════════════════════════════╝

    TASK                          URL                           ACTION
    ────────────────────────────────────────────────────────────────────────
    1. Create 1 booking           /booking/add                  Fill form → Save
    2. View all bookings          /booking/check-list           Filter → Show
    3. Edit existing              /booking/modify               Filter → Show → Edit
    4. Bulk update rates          /booking/update-rate          Filter → Edit → UpdateRate
    5. Find unbilled              /booking/no-booking-data      Date range → Show
    6. Create many at once        /booking/multiple             Range → Submit
    7. Import from file           /booking/import-excel         Download → Fill → Upload
    8. Import from CashCounter    /booking/import-cashcounter   Date range → Book
    9. Import text/excel          /booking/import-limitless     Upload files


═══════════════════════════════════════════════════════════════════════════════
✨ SYSTEM STATUS: 🟢 PRODUCTION READY
═══════════════════════════════════════════════════════════════════════════════